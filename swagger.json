{
  "openapi": "3.0.3",
  "info": {
    "title": "Backend REST API",
    "version": "1.0"
  },
  "paths": {
    "/api/orders/makeorder": {
      "post": {
        "tags": ["Orders"],
        "summary": "Create an order",
        "responses": {
          "200": {
            "description": "Order created"
          }
        }
      }
    },
    "/api/items/delete/{id}": {
      "delete": {
        "tags": ["Items"],
        "summary": "Deletes an item, requires admin token",
        "responses": {
          "200": {
            "description": "Item deleted."
          }
        },
        "parameters": [
          {
            "name": "ID",
            "required": true,
            "description": "ID of item to delete",
            "schema": { "type": "string" },
            "in": "path"
          }
        ]
      }
    },
    "/api/items/update/{id}": {
      "put": {
        "tags": ["Items"],
        "summary": "Updates an item, requires admin token",
        "responses": {
          "200": {
            "description": "Item updated."
          }
        },
        "parameters": [
          {
            "name": "ID",
            "required": true,
            "description": "ID of item to update",
            "schema": { "type": "string" },
            "in": "path"
          }
        ]
      }
    },
    "/api/items/add": {
      "post": {
        "tags": ["Items"],
        "summary": "Adds an item, requires admin token",
        "responses": {
          "200": {
            "description": "Item added."
          }
        }
      }
    },
    "/api/items/get/{id}": {
      "get": {
        "tags": ["Items"],
        "summary": "Gets an item",
        "responses": {
          "200": {
            "description": "Returns a specific item"
          }
        },
        "parameters": [
          {
            "name": "ID",
            "required": true,
            "description": "ID of item to get",
            "schema": { "type": "string" },
            "in": "path"
          }
        ]
      }
    },
    "/api/items/allitems": {
      "get": {
        "tags": ["Items"],
        "summary": "Gets all items",
        "responses": {
          "200": {
            "description": "Returns all items"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Logs in user and returns JWT Token.",
        "responses": {
          "200": {
            "description": "JWT Token"
          }
        }
      }
    },
    "/api/auth/currentuser": {
      "get": {
        "tags": ["Users"],
        "summary": "Gets current user, body requires valid bearer token",
        "responses": {
          "200": {
            "description": "User object without password"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "greg" },
                  "email": { "type": "string", "example": "greg@greg.com" },
                  "password": { "type": "string", "example": "123456" },
                  "role": { "type": "string", "example": "client" }
                }
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "User registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [{ "bearerAuth": [] }]
}
